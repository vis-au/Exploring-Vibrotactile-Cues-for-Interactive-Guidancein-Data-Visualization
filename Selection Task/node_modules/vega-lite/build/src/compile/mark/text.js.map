{"version":3,"file":"text.js","sourceRoot":"","sources":["../../../../src/compile/mark/text.ts"],"names":[],"mappings":"AAGA,OAAO,EAAC,aAAa,EAAC,MAAM,WAAW,CAAC;AAGxC,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,KAAK,GAAG,MAAM,YAAY,CAAC;AAElC,MAAM,CAAC,MAAM,IAAI,GAAiB;IAChC,MAAM,EAAE,MAAM;IAEd,WAAW,EAAE,CAAC,KAAgB,EAAE,EAAE;QAChC,MAAM,EAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAC,GAAG,KAAK,CAAC;QAEhD,6GACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;YAC/B,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,SAAS;YACnB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,QAAQ;SACjB,CAAC,GACC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAChD,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAClB,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;YACnC,SAAS,EAAE,UAAU,CAAC,6BAA6B;SACpD,CAAC,GACC,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,GACtE,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,EAC/E;IACJ,CAAC;CACF,CAAC;AAEF,SAAS,KAAK,CAAC,OAAgB,EAAE,QAA0B,EAAE,MAAc;IACzE,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,IAAI,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACnE,IAAI,CAAC,KAAK,SAAS,EAAE;QACnB,OAAO,QAAQ,CAAC;KACjB;IACD,+DAA+D;IAC/D,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,QAAQ,CAAC,OAAgB,EAAE,QAA0B,EAAE,MAAc;IAC5E,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,IAAI,aAAa,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACzE,IAAI,CAAC,KAAK,SAAS,EAAE;QACnB,OAAO,QAAQ,CAAC;KACjB;IACD,+DAA+D;IAC/D,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["import {Config} from '../../config';\nimport {Encoding} from '../../encoding';\nimport {MarkDef} from '../../mark';\nimport {getMarkConfig} from '../common';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\nimport * as ref from './valueref';\n\nexport const text: MarkCompiler = {\n  vgMark: 'text',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, encoding, width, height} = model;\n\n    return {\n      ...mixins.baseEncodeEntry(model, {\n        align: 'include',\n        baseline: 'include',\n        color: 'include',\n        size: 'ignore',\n        orient: 'ignore'\n      }),\n      ...mixins.pointPosition('x', model, ref.mid(width)),\n      ...mixins.pointPosition('y', model, ref.mid(height)),\n      ...mixins.text(model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'fontSize' // VL's text size is fontSize\n      }),\n      ...mixins.valueIfDefined('align', align(model.markDef, encoding, config)),\n      ...mixins.valueIfDefined('baseline', baseline(model.markDef, encoding, config))\n    };\n  }\n};\n\nfunction align(markDef: MarkDef, encoding: Encoding<string>, config: Config) {\n  const a = markDef.align || getMarkConfig('align', markDef, config);\n  if (a === undefined) {\n    return 'center';\n  }\n  // If there is a config, Vega-parser will process this already.\n  return undefined;\n}\n\nfunction baseline(markDef: MarkDef, encoding: Encoding<string>, config: Config) {\n  const b = markDef.baseline || getMarkConfig('baseline', markDef, config);\n  if (b === undefined) {\n    return 'middle';\n  }\n  // If there is a config, Vega-parser will process this already.\n  return undefined;\n}\n"]}