{"version":3,"file":"component.js","sourceRoot":"","sources":["../../../../src/compile/axis/component.ts"],"names":[],"mappings":"AACA,OAAO,EAIL,4BAA4B,EAG7B,MAAM,YAAY,CAAC;AAEpB,OAAO,EAAC,SAAS,EAAQ,IAAI,EAAC,MAAM,YAAY,CAAC;AACjD,OAAO,EAAC,KAAK,EAAC,MAAM,UAAU,CAAC;AAE/B,SAAS,aAAa,CAAC,CAAM;IAC3B,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC;AACnC,CAAC;AASD,MAAM,+BAA+B,iCACnC,SAAS,EAAE,CAAC,EACZ,KAAK,EAAE,CAAC,IACL,4BAA4B,KAC/B,SAAS,EAAE,CAAC,EACZ,MAAM,EAAE,CAAC,GACV,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,IAAI,CAAC,+BAA+B,CAAC,CAAC;AAE/E,MAAM,OAAO,aAAc,SAAQ,KAAyB;IAC1D,YACkB,WAAwC,EAAE,EAC1C,WAAwC,EAAE,EACnD,gBAAgB,KAAK;QAE5B,KAAK,EAAE,CAAC;QAJQ,aAAQ,GAAR,QAAQ,CAAkC;QAC1C,aAAQ,GAAR,QAAQ,CAAkC;QACnD,kBAAa,GAAb,aAAa,CAAQ;IAG9B,CAAC;IAEM,KAAK;QACV,OAAO,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACnG,CAAC;IAEM,WAAW,CAAC,IAAc;QAC/B,2GAA2G;QAE3G,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,qCAAqC;YACrC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YACvC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzB;QACD,2EAA2E;QAC3E,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC;CACF","sourcesContent":["import {Axis as VgAxis} from 'vega';\nimport {\n  Axis,\n  AxisPart,\n  BaseAxisNoSignals,\n  COMMON_AXIS_PROPERTIES_INDEX,\n  ConditionalAxisProp,\n  ConditionalAxisProperty\n} from '../../axis';\nimport {FieldDefBase} from '../../channeldef';\nimport {duplicate, Flag, keys} from '../../util';\nimport {Split} from '../split';\n\nfunction isFalseOrNull(v: any) {\n  return v === false || v === null;\n}\n\nexport type AxisComponentProps = Omit<VgAxis, 'title' | ConditionalAxisProp> & {\n  title: string | FieldDefBase<string>[];\n  labelExpr: string;\n} & {\n    [k in ConditionalAxisProp]?: BaseAxisNoSignals[k] | ConditionalAxisProperty<BaseAxisNoSignals[k]>;\n  };\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX: Flag<keyof AxisComponentProps> = {\n  gridScale: 1,\n  scale: 1,\n  ...COMMON_AXIS_PROPERTIES_INDEX,\n  labelExpr: 1,\n  encode: 1\n};\n\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\n\nexport class AxisComponent extends Split<AxisComponentProps> {\n  constructor(\n    public readonly explicit: Partial<AxisComponentProps> = {},\n    public readonly implicit: Partial<AxisComponentProps> = {},\n    public mainExtracted = false\n  ) {\n    super();\n  }\n\n  public clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  public hasAxisPart(part: AxisPart) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    }\n    // Other parts are enabled by default, so they should not be false or null.\n    return !isFalseOrNull(this.get(part));\n  }\n}\n\nexport interface AxisComponentIndex {\n  x?: AxisComponent[];\n  y?: AxisComponent[];\n}\n\nexport interface AxisIndex {\n  x?: Axis;\n  y?: Axis;\n}\n"]}