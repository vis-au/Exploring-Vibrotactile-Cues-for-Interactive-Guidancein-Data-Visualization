{"version":3,"file":"geopoint.js","sourceRoot":"","sources":["../../../../src/compile/data/geopoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,WAAW,CAAC;AACnC,OAAO,EAAqB,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAC,MAAM,eAAe,CAAC;AAC7F,OAAO,EAAC,UAAU,EAAW,MAAM,kBAAkB,CAAC;AACtD,OAAO,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,YAAY,CAAC;AAG3C,OAAO,EAAC,YAAY,EAAC,MAAM,YAAY,CAAC;AAExC,MAAM,OAAO,YAAa,SAAQ,YAAY;IAK5C,YACE,MAAoB,EACZ,UAAkB,EAClB,MAA8B,EAC9B,EAAoB;QAE5B,KAAK,CAAC,MAAM,CAAC,CAAC;QAJN,eAAU,GAAV,UAAU,CAAQ;QAClB,WAAM,GAAN,MAAM,CAAwB;QAC9B,OAAE,GAAF,EAAE,CAAkB;IAG9B,CAAC;IAXM,KAAK;QACV,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7F,CAAC;IAWM,MAAM,CAAC,QAAQ,CAAC,MAAoB,EAAE,KAAgB;QAC3D,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE;YAC3B,OAAO,MAAM,CAAC;SACf;QAED,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,WAAiC,EAAE,EAAE;YAC7F,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CACrC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC;gBAC5B,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;gBAC/B,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBACrC,CAAC,CAAC,EAAC,IAAI,EAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAsB,CAAC,KAAK,GAAG,EAAE,EAAC;oBAClE,CAAC,CAAC,SAAS,CACd,CAAC;YAEF,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAExD,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;gBACtB,MAAM,GAAG,IAAI,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE;oBAC9D,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC;oBAC3B,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC;iBAC5B,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/C,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAEM,IAAI;QACT,OAAO,YAAY,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IAC7E,CAAC;IAEM,QAAQ;QACb,OAAO;YACL,IAAI,EAAE,UAAU;YAChB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,EAAE,EAAE,IAAI,CAAC,EAAE;SACZ,CAAC;IACJ,CAAC;CACF","sourcesContent":["import {isString} from 'vega-util';\nimport {GeoPositionChannel, LATITUDE, LATITUDE2, LONGITUDE, LONGITUDE2} from '../../channel';\nimport {isValueDef, ValueDef} from '../../channeldef';\nimport {duplicate, hash} from '../../util';\nimport {VgExprRef, VgGeoPointTransform} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {DataFlowNode} from './dataflow';\n\nexport class GeoPointNode extends DataFlowNode {\n  public clone() {\n    return new GeoPointNode(null, this.projection, duplicate(this.fields), duplicate(this.as));\n  }\n\n  constructor(\n    parent: DataFlowNode,\n    private projection: string,\n    private fields: (string | VgExprRef)[],\n    private as: [string, string]\n  ) {\n    super(parent);\n  }\n\n  public static parseAll(parent: DataFlowNode, model: UnitModel): DataFlowNode {\n    if (!model.projectionName()) {\n      return parent;\n    }\n\n    [[LONGITUDE, LATITUDE], [LONGITUDE2, LATITUDE2]].forEach((coordinates: GeoPositionChannel[]) => {\n      const pair = coordinates.map(channel =>\n        model.channelHasField(channel)\n          ? model.fieldDef(channel).field\n          : isValueDef(model.encoding[channel])\n          ? {expr: (model.encoding[channel] as ValueDef<number>).value + ''}\n          : undefined\n      );\n\n      const suffix = coordinates[0] === LONGITUDE2 ? '2' : '';\n\n      if (pair[0] || pair[1]) {\n        parent = new GeoPointNode(parent, model.projectionName(), pair, [\n          model.getName('x' + suffix),\n          model.getName('y' + suffix)\n        ]);\n      }\n    });\n\n    return parent;\n  }\n\n  public dependentFields() {\n    return new Set(this.fields.filter(isString));\n  }\n\n  public producedFields() {\n    return new Set(this.as);\n  }\n\n  public hash() {\n    return `Geopoint ${this.projection} ${hash(this.fields)} ${hash(this.as)}`;\n  }\n\n  public assemble(): VgGeoPointTransform {\n    return {\n      type: 'geopoint',\n      projection: this.projection,\n      fields: this.fields,\n      as: this.as\n    };\n  }\n}\n"]}