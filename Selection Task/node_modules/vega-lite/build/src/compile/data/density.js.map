{"version":3,"file":"density.js","sourceRoot":"","sources":["../../../../src/compile/data/density.ts"],"names":[],"mappings":";AAEA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAC,YAAY,EAAC,MAAM,YAAY,CAAC;AAExC;;GAEG;AACH,MAAM,OAAO,oBAAqB,SAAQ,YAAY;IAKpD,YAAY,MAAoB,EAAU,SAA2B;QACnE,KAAK,CAAC,MAAM,CAAC,CAAC;QAD0B,cAAS,GAAT,SAAS,CAAkB;QAEnE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,oCAAoC;QAC3E,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC;IAC/E,CAAC;IATM,KAAK;QACV,OAAO,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACnE,CAAC;IASM,eAAe;QACpB,OAAO,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,IAAI;QACT,OAAO,oBAAoB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;IACpD,CAAC;IAEM,QAAQ;QACb,MAAM,mBAAmC,EAAnC,EAAC,OAAO,OAA2B,EAAzB,8BAAyB,CAAC;QAC1C,MAAM,MAAM,mBACV,IAAI,EAAE,KAAK,EACX,KAAK,EAAE,OAAO,IACX,IAAI,CACR,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;CACF","sourcesContent":["import {KDETransform as VgKDETransform} from 'vega';\nimport {DensityTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for density transform nodes\n */\nexport class DensityTransformNode extends DataFlowNode {\n  public clone() {\n    return new DensityTransformNode(null, duplicate(this.transform));\n  }\n\n  constructor(parent: DataFlowNode, private transform: DensityTransform) {\n    super(parent);\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n    const specifiedAs = this.transform.as || [undefined, undefined];\n    this.transform.as = [specifiedAs[0] || 'value', specifiedAs[1] || 'density'];\n  }\n\n  public dependentFields() {\n    return new Set([this.transform.density, ...(this.transform.groupby || [])]);\n  }\n\n  public producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  public hash() {\n    return `DensityTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgKDETransform {\n    const {density, ...rest} = this.transform;\n    const result: VgKDETransform = {\n      type: 'kde',\n      field: density,\n      ...rest\n    };\n    return result;\n  }\n}\n"]}