{"version":3,"file":"buildmodel.js","sourceRoot":"","sources":["../../../src/compile/buildmodel.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,GAAG,MAAM,QAAQ,CAAC;AAC9B,OAAO,EACL,eAAe,EACf,WAAW,EACX,WAAW,EACX,YAAY,EACZ,UAAU,EAGX,MAAM,SAAS,CAAC;AACjB,OAAO,EAAC,WAAW,EAAC,MAAM,UAAU,CAAC;AACrC,OAAO,EAAC,UAAU,EAAC,MAAM,SAAS,CAAC;AACnC,OAAO,EAAC,UAAU,EAAC,MAAM,SAAS,CAAC;AAEnC,OAAO,EAAC,WAAW,EAAC,MAAM,UAAU,CAAC;AAErC,OAAO,EAAC,SAAS,EAAC,MAAM,QAAQ,CAAC;AAEjC,MAAM,UAAU,UAAU,CACxB,IAAoB,EACpB,MAAa,EACb,eAAuB,EACvB,QAA0B,EAC1B,QAAuB,EACvB,MAAc;IAEd,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;QACrB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACxE;SAAM,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KAClF;SAAM,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;QAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACjF;SAAM,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;QAC7B,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACzE;SAAM,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;QAChC,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;KACzE;IACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,CAAC","sourcesContent":["import {Config} from '../config';\nimport * as log from '../log';\nimport {\n  isAnyConcatSpec,\n  isFacetSpec,\n  isLayerSpec,\n  isRepeatSpec,\n  isUnitSpec,\n  LayoutSizeMixins,\n  NormalizedSpec\n} from '../spec';\nimport {ConcatModel} from './concat';\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {RepeatModel} from './repeat';\nimport {RepeaterValue} from './repeater';\nimport {UnitModel} from './unit';\n\nexport function buildModel(\n  spec: NormalizedSpec,\n  parent: Model,\n  parentGivenName: string,\n  unitSize: LayoutSizeMixins,\n  repeater: RepeaterValue,\n  config: Config\n): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, repeater, config);\n  } else if (isRepeatSpec(spec)) {\n    return new RepeatModel(spec, parent, parentGivenName, repeater, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, repeater, config);\n  }\n  throw new Error(log.message.invalidSpec(spec));\n}\n"]}