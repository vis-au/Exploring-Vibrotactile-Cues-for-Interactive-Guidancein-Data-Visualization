{
    "name": "vega-lite",
    "author": "Dominik Moritz, Kanit \"Ham\" Wongsuphasawat, Arvind Satyanarayan, Jeffrey Heer",
    "version": "4.0.0-beta.2",
    "collaborators": [
        "Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)",
        "Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)",
        "Arvind Satyanarayan (https://arvindsatya.com/)",
        "Jeffrey Heer (https://jheer.org)"
    ],
    "homepage": "https://vega.github.io/vega-lite/",
    "description": "Vega-Lite is a concise high-level language for interactive visualization.",
    "main": "build/vega-lite.js",
    "unpkg": "build/vega-lite.min.js",
    "jsdelivr": "build/vega-lite.min.js",
    "module": "build/src/index",
    "types": "build/src/index.d.ts",
    "bin": {
        "vl2png": "./bin/vl2png",
        "vl2svg": "./bin/vl2svg",
        "vl2vg": "./bin/vl2vg"
    },
    "directories": {
        "test": "test"
    },
    "scripts": {
        "build": "yarn build:only",
        "build:only": "yarn tsc:src && rollup -c",
        "postbuild": "terser build/vega-lite.js -cm --source-map content=build/vega-lite.js.map,filename=build/vega-lite.min.js.map -o build/vega-lite.min.js && yarn schema",
        "build:examples": "yarn build:only",
        "postbuild:examples": "yarn data && TZ=America/Los_Angeles scripts/build-examples.sh",
        "build:examples-full": "yarn build:only",
        "postbuild:examples-full": "TZ=America/Los_Angeles scripts/build-examples.sh 1",
        "build:example": "TZ=America/Los_Angeles scripts/build-example.sh",
        "build:toc": "yarn data && bundle exec jekyll build -q && scripts/generate-toc",
        "build:site": "yarn tsc:site && rollup -c site/rollup.config.js",
        "build:versions": "scripts/update-version.sh",
        "clean": "rm -rf build && rm -f examples/compiled/*.png && find site/examples ! -name 'index.md' -type f -delete",
        "data": "rsync -r node_modules/vega-datasets/data/* data",
        "deploy": "scripts/deploy.sh",
        "deploy:gh": "scripts/deploy-gh.sh",
        "deploy:schema": "scripts/deploy-schema.sh",
        "schema": "mkdir -p build && ts-json-schema-generator -c -f tsconfig.json -p src/index.ts -t TopLevelSpec > build/vega-lite-schema.json && yarn renameschema && cp build/vega-lite-schema.json _data/",
        "renameschema": "scripts/rename-schema.sh",
        "presite": "yarn data && yarn build:site && yarn build:toc && yarn build:versions && scripts/create-example-pages",
        "site": "bundle exec jekyll serve --incremental",
        "tsc:src": "tsc -b src/tsconfig.src.json",
        "tsc:site": "tsc -b site/tsconfig.site.json",
        "prettierbase": "prettier '{src,test,test-runtime,site,typings}/**/*.{md,css}'",
        "eslintbase": "eslint '{src,test,test-runtime,site,typings}/**/*.ts'",
        "format": "yarn eslintbase --fix && yarn prettierbase --write",
        "lint": "yarn eslintbase && yarn prettierbase --check",
        "test": "jest test/ && yarn lint && yarn schema && jest examples/ && yarn test:runtime",
        "test:inspect": "node --inspect-brk ./node_modules/.bin/jest --runInBand test",
        "test:runtime": "TZ=America/Los_Angeles jest test-runtime/",
        "test:runtime:generate": "rm -Rf test-runtime/resources && VL_GENERATE_TESTS=true yarn test:runtime",
        "watch:build": "yarn build:only && concurrently --kill-others -n Typescript,Rollup 'yarn tsc:src -w' 'rollup -c -w'",
        "watch:site": "concurrently --kill-others -n Typescript,Rollup 'yarn tsc:site -w' 'rollup -c site/rollup.config.js -w'",
        "watch:test": "jest --watch"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/vega/vega-lite.git"
    },
    "license": "BSD-3-Clause",
    "bugs": {
        "url": "https://github.com/vega/vega-lite/issues"
    },
    "devDependencies": {
        "@types/chai": "^4.2.1",
        "@types/d3": "^5.7.2",
        "@types/highlight.js": "^9.12.3",
        "@types/jest": "^24.0.18",
        "@types/jest-environment-puppeteer": "^4.3.1",
        "@types/mkdirp": "^0.5.2",
        "@types/node": "^12.7.4",
        "@types/puppeteer": "^1.19.1",
        "@typescript-eslint/eslint-plugin": "^2.1.0",
        "@typescript-eslint/parser": "^2.1.0",
        "ajv": "^6.10.2",
        "chai": "^4.2.0",
        "cheerio": "^1.0.0-rc.2",
        "codecov": "^3.5.0",
        "concurrently": "^4.1.2",
        "d3": "^5.11.0",
        "eslint": "^6.3.0",
        "eslint-config-prettier": "^6.2.0",
        "eslint-plugin-prettier": "^3.1.0",
        "highlight.js": "^9.15.10",
        "http-server": "^0.11.1",
        "jest": "^24.9.0",
        "jest-puppeteer": "^4.3.0",
        "mkdirp": "^0.5.1",
        "prettier": "^1.18.2",
        "puppeteer": "^1.19.0",
        "rollup": "^1.20.3",
        "rollup-plugin-commonjs": "^10.1.0",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.2.0",
        "rollup-plugin-sourcemaps": "^0.4.2",
        "rollup-plugin-terser": "^5.1.1",
        "svg2png-many": "^0.0.7",
        "terser": "^4.2.1",
        "ts-jest": "^24.0.2",
        "ts-json-schema-generator": "^0.52.14",
        "typescript": "~3.6.2",
        "vega-cli": "^5.5.3",
        "vega-datasets": "^1.25.0",
        "vega-embed": "^5.1.2",
        "vega-tooltip": "^0.19.1",
        "yaml-front-matter": "^4.0.0"
    },
    "dependencies": {
        "@types/clone": "~0.1.30",
        "@types/fast-json-stable-stringify": "^2.0.0",
        "array-flat-polyfill": "^1.0.1",
        "clone": "~2.1.2",
        "fast-deep-equal": "~2.0.1",
        "fast-json-stable-stringify": "~2.0.0",
        "json-stringify-pretty-compact": "~2.0.0",
        "tslib": "~1.10.0",
        "vega-event-selector": "~2.0.1",
        "vega-expression": "~2.6.1",
        "vega-typings": "~0.8.1",
        "vega-util": "~1.11.1",
        "yargs": "~14.0.0"
    },
    "peerDependencies": {
        "vega": "^5.5.0"
    },
    "jest": {
        "preset": "jest-puppeteer",
        "transform": {
            "^.+\\.tsx?$": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js",
            "jsx",
            "json",
            "node"
        ],
        "testPathIgnorePatterns": [
            "<rootDir>/node_modules",
            "<rootDir>/build",
            "<rootDir>/_site",
            "<rootDir>/src"
        ],
        "coverageDirectory": "./coverage/",
        "collectCoverage": false
    }
}
